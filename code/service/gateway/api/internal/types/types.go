// Code generated by goctl. DO NOT EDIT.
package types

type Response struct {
	Code int32  `json:"code"`
	Msg  string `json:"msg"`
}

type IndexResponse struct {
	Msg string `json:"msg"`
}

type ComPinyinRequest struct {
	Keyword string `json:"keyword"`
}

type ComPinyinResponse struct {
	List []map[string]string `json:"list"`
}

type ComBannedRequest struct {
	Keyword string `json:"keyword"`
}

type ComBannedResponse struct {
	List []map[string]string `json:"list"`
}

type OrderCreateRequest struct {
	Pid    int64 `json:"pid"`
	Amount int64 `json:"amount"`
	Status int64 `json:"status"`
}

type OrderCreateResponse struct {
	Response
	Id int64 `json:"id"`
}

type OrderUpdateRequest struct {
	Id     int64 `path:"id"`
	Uid    int64 `json:"uid,optional"`
	Pid    int64 `json:"pid,optional"`
	Amount int64 `json:"amount,optional"`
	Status int64 `json:"status,optional"`
}

type OrderUpdateResponse struct {
}

type OrderRemoveRequest struct {
	Id int64 `path:"id"`
}

type OrderRemoveResponse struct {
}

type OrderDetailRequest struct {
	Id int64 `path:"id"`
}

type OrderDetailResponse struct {
	Id     int64 `json:"id"`
	Uid    int64 `json:"uid"`
	Pid    int64 `json:"pid"`
	Amount int64 `json:"amount"`
	Status int64 `json:"status"`
}

type OrderListRequest struct {
	Uid int64 `json:"uid"`
}

type OrderListResponse struct {
	Id     int64 `json:"id"`
	Uid    int64 `json:"uid"`
	Pid    int64 `json:"pid"`
	Amount int64 `json:"amount"`
	Status int64 `json:"status"`
}

type PayCreateRequest struct {
	Uid    int64 `json:"uid"`
	Oid    int64 `json:"oid"`
	Amount int64 `json:"amount"`
}

type PayCreateResponse struct {
	Id int64 `json:"id"`
}

type PayDetailRequest struct {
	Id int64 `path:"id"`
}

type PayDetailResponse struct {
	Id     int64 `json:"id"`
	Uid    int64 `json:"uid"`
	Oid    int64 `json:"oid"`
	Amount int64 `json:"amount"`
	Source int64 `json:"source"`
	Status int64 `json:"status"`
}

type PayCallbackRequest struct {
	Id     int64 `json:"id"`
	Uid    int64 `json:"uid"`
	Oid    int64 `json:"oid"`
	Amount int64 `json:"amount"`
	Source int64 `json:"source"`
	Status int64 `json:"status"`
}

type PayCallbackResponse struct {
}

type ProductCreateRequest struct {
	Name   string `json:"name"`
	Desc   string `json:"desc"`
	Stock  int64  `json:"stock"`
	Amount int64  `json:"amount"`
	Status int64  `json:"status"`
}

type ProductCreateResponse struct {
	Id int64 `path:"id"`
}

type ProductUpdateRequest struct {
	Id     int64  `path:"id"`
	Name   string `json:"name,optional"`
	Desc   string `json:"desc,optional"`
	Stock  int64  `json:"stock"`
	Amount int64  `json:"amount,optional"`
	Status int64  `json:"status,optional"`
}

type ProductUpdateResponse struct {
}

type ProductRemoveRequest struct {
	Id int64 `path:"id"`
}

type ProductRemoveResponse struct {
}

type ProductDetailRequest struct {
	Id int64 `path:"id"`
}

type ProductDetailResponse struct {
	Id     int64  `json:"id"`
	Name   string `json:"name"`
	Desc   string `json:"desc"`
	Stock  int64  `json:"stock"`
	Amount int64  `json:"amount"`
	Status int64  `json:"status"`
}

type ProductInfoReq struct {
	Id int64 `path:"id"`
}

type SearchRequest struct {
	Keyword string `json:"keyword"`
}

type SearchResponse struct {
	List []map[string]string `json:"list"`
}

type LoginRequest struct {
	Mobile   string `json:"mobile"`
	Password string `json:"password"`
}

type LoginResponse struct {
	AccessToken  string `json:"accessToken"`
	AccessExpire int64  `json:"accessExpire"`
}

type RegisterRequest struct {
	Name     string `json:"name"`
	Gender   int64  `json:"gender"`
	Mobile   string `json:"mobile"`
	Password string `json:"password"`
}

type RegisterResponse struct {
	Id     int64  `json:"id"`
	Name   string `json:"name"`
	Gender int64  `json:"gender"`
	Mobile string `json:"mobile"`
}

type UserInfoResponse struct {
	Id     int64  `json:"id"`
	Name   string `json:"name"`
	Gender int64  `json:"gender"`
	Mobile string `json:"mobile"`
}

type UserVipResponse struct {
	Id            int64  `json:"id"`
	UserId        int64  `json:"user_id"`
	VipId         int64  `json:"vip_id"`
	VipType       int64  `json:"vip_type"`        // 对应 vip 表 type
	VideoId       int64  `json:"video_id"`        // 视频 id（单张购买使用）
	OrderId       int64  `json:"order_id"`        // 订单 id
	LicenseId     int64  `json:"license_id"`      // cd_user_vip_license表id
	StartTime     int64  `json:"start_time"`      // 起效时间
	EndTime       int64  `json:"end_time"`        // 失效时间
	DayLimit      int64  `json:"day_limit"`       // 日下载限制
	TotalLimit    int64  `json:"total_limit"`     // 总下载限制
	LastAdminUser string `json:"last_admin_user"` // 最后一个操作vip的人
	Remark        string `json:"remark"`          // 备注{为什么添加}
	CreatedTime   int64  `json:"created_time"`
}

type UserCartResponse struct {
	Id          int64  `json:"id"`
	UserId      int64  `json:"user_id"`
	Username    string `json:"username"`
	SourceId    int64  `json:"source_id"`
	SourceType  int64  `json:"source_type"`
	LicenseType int64  `json:"license_type"` // 授权类型(100:个人,200:企业,210企业plus,300:单张)
	VideoRate   int64  `json:"video_rate"`   // 等级\\0 : 其他\\1 : 1280x720\\2 : 1920x1080\\3 : 4096x2169(4k)\\4 : 8192x4320(8k)\\5 : 2048x1080(2k)\\6 : 3840x2160(UHD 4K)\\7 : 7680x4320(UHD 8K)
	SourceNum   int64  `json:"source_num"`   // 素材数量(用于购买多个)
	CreatedTime int64  `json:"created_time"`
	UpdatedTime int64  `json:"updated_time"`
}

type VipCreateRequest struct {
	Title         string  `db:"title"`          // 标题
	TitleSimple   string  `db:"title_simple"`   // 简写标题
	Desc          string  `db:"desc"`           // 描述
	Appliance     string  `db:"appliance"`      // 适用范围
	Tp            int64   `db:"type"`           // 1:免费 100:个人 200:企业 300:单张个人 400:单张企业
	ClassType     int64   `db:"class_type"`     // 分类 vip 类型
	AuthId        int64   `db:"auth_id"`        // 授权类型
	Level         int64   `db:"level"`          // 等级
	Sort          int64   `db:"sort"`           // 排序
	Price         float64 `db:"price"`          // 价格
	OriginalPrice float64 `db:"original_price"` // 原价
	DayLimit      int64   `db:"day_limit"`      // 日下载限制
	TotalLimit    int64   `db:"total_limit"`    // 总下载限制
	ResetCycle    int64   `db:"reset_cycle"`    // 重置周期（单位/天）
	ParentId      int64   `db:"parent_id"`      // 父级id
	SingleId      int64   `db:"single_id"`      // VIP对应单张 id (0代表单个购买价格，大于0代表VIP价格(其中1代表无对应售卖的单款价格)）
	IsUsable      int64   `db:"is_usable"`      // 是否可用
}

type VipCreateResponse struct {
	Id int64 `json:"id"`
}

type VipUpdateRequest struct {
	Title         string  `db:"title"`          // 标题
	TitleSimple   string  `db:"title_simple"`   // 简写标题
	Desc          string  `db:"desc"`           // 描述
	Appliance     string  `db:"appliance"`      // 适用范围
	Tp            int64   `db:"type"`           // 1:免费 100:个人 200:企业 300:单张个人 400:单张企业
	ClassType     int64   `db:"class_type"`     // 分类 vip 类型
	AuthId        int64   `db:"auth_id"`        // 授权类型
	Level         int64   `db:"level"`          // 等级
	Sort          int64   `db:"sort"`           // 排序
	Price         float64 `db:"price"`          // 价格
	OriginalPrice float64 `db:"original_price"` // 原价
	DayLimit      int64   `db:"day_limit"`      // 日下载限制
	TotalLimit    int64   `db:"total_limit"`    // 总下载限制
	ResetCycle    int64   `db:"reset_cycle"`    // 重置周期（单位/天）
	ParentId      int64   `db:"parent_id"`      // 父级id
	SingleId      int64   `db:"single_id"`      // VIP对应单张 id (0代表单个购买价格，大于0代表VIP价格(其中1代表无对应售卖的单款价格)）
	IsUsable      int64   `db:"is_usable"`      // 是否可用
}

type VipUpdateResponse struct {
}

type VipRemoveRequest struct {
	Id int64 `json:"id"`
}

type VipRemoveResponse struct {
}

type VipDetailRequest struct {
	Id int64 `json:"id"`
}

type VipDetailResponse struct {
	Id            int64   `db:"id"`
	Title         string  `db:"title"`          // 标题
	TitleSimple   string  `db:"title_simple"`   // 简写标题
	Desc          string  `db:"desc"`           // 描述
	Appliance     string  `db:"appliance"`      // 适用范围
	Tp            int64   `db:"type"`           // 1:免费 100:个人 200:企业 300:单张个人 400:单张企业
	ClassType     int64   `db:"class_type"`     // 分类 vip 类型
	AuthId        int64   `db:"auth_id"`        // 授权类型
	Level         int64   `db:"level"`          // 等级
	Sort          int64   `db:"sort"`           // 排序
	Price         float64 `db:"price"`          // 价格
	OriginalPrice float64 `db:"original_price"` // 原价
	DayLimit      int64   `db:"day_limit"`      // 日下载限制
	TotalLimit    int64   `db:"total_limit"`    // 总下载限制
	ResetCycle    int64   `db:"reset_cycle"`    // 重置周期（单位/天）
	ParentId      int64   `db:"parent_id"`      // 父级id
	SingleId      int64   `db:"single_id"`      // VIP对应单张 id (0代表单个购买价格，大于0代表VIP价格(其中1代表无对应售卖的单款价格)）
	IsUsable      int64   `db:"is_usable"`      // 是否可用
	UpdatedTime   int64   `db:"updated_time"`
	CreatedTime   int64   `db:"created_time"`
}
